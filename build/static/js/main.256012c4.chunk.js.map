{"version":3,"sources":["firebase.js","StateProvider.js","Chat.js","SidebarChat.js","Sidebar.js","reducer.js","Login.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","input","setInput","setSeed","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","className","Avatar","src","Date","length","timestamp","toDate","toUTCString","IconButton","SearchOutlined","AttachFile","MoreVert","message","displayName","onChange","e","target","placeholder","type","onClick","preventDefault","console","log","add","FieldValue","serverTimestamp","SidebarChat","id","addNewChat","seed","prompt","to","Sidebar","rooms","setRooms","unsubscribe","photoURL","room","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","exact","path","ReactDOM","render","StrictMode","document","getElementById","serviceWorker"],"mappings":"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","file":"static/js/main.256012c4.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBYD3TB-QiKqJP2zP0khgahONgcuEknA1I\",\r\n    authDomain: \"whatsapp-clone-67484.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-67484\",\r\n    storageBucket: \"whatsapp-clone-67484.appspot.com\",\r\n    messagingSenderId: \"118801430296\",\r\n    appId: \"1:118801430296:web:856daebf0757a1489d106d\"\r\n  };\r\n\r\n  const firebaseApp =  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {auth, provider };\r\n  export default db;","import React, {createContext, useContext,\r\n    useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, \r\n    initialState, children }) => (\r\n    <StateContext.Provider value={useReducer\r\n     (reducer, initialState)}>\r\n       {children}  \r\n     </StateContext.Provider>\r\n    \r\n);\r\n\r\nexport const useStateValue =() => useContext\r\n(StateContext);\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Chat.css';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined, SettingsInputAntenna } from '@material-ui/icons';\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\"\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').\r\n                doc(roomId)\r\n                .onSnapshot((snapshot) => setRoomName\r\n                    (snapshot.data().name));\r\n\r\n            db.collection('rooms')\r\n                .doc(roomId)\r\n                .collection('messages')\r\n                .orderBy('timestamp', 'asc')\r\n                .onSnapshot((snapshot) =>\r\n                    setMessages(snapshot.docs.map((doc) =>\r\n                        doc.data()))\r\n                );\r\n\r\n        }\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n    }, []);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"you typed >>>> \", input);\r\n        db.collection('rooms').doc(roomId).collection\r\n            ('messages').add({\r\n                message: input,\r\n                name: user.displayName,\r\n                timestamp: firebase.firestore.FieldValue.\r\n                    serverTimestamp(),\r\n            });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${Math.floor(Math.random() * 5000)}.svg`} />\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last seen{\" \"}\r\n                    {new Date(\r\n                       messages[messages.length -1]?.\r\n                       timestamp?.toDate()\r\n                       ).toUTCString()}\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__body\">\r\n                {messages.map(message => (\r\n                    <p\r\n                        className={`chat__message ${message.name === user.displayName\r\n                            && \"chat__reciever\"\r\n                            }`}\r\n                    >\r\n                        <span className=\"chat__name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat__timestamp\">\r\n                            {new Date(message.timestamp?.toDate\r\n                                ()).toUTCString()}\r\n                        </span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={e => setInput(e.target.\r\n                        value)}\r\n                        placeholder=\"Type a message\"\r\n                        type=\"text\" />\r\n                    <button onClick={sendMessage}\r\n                        type=\"submit\">Send a message\r\n                   </button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./SidebarChat.css\";\r\nimport { Avatar } from '@material-ui/core';\r\nimport db from './firebase';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [messages, setMessages] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      db.collection('rooms').doc(id).collection\r\n        ('messages').orderBy('timestamp', 'desc').\r\n        onSnapshot(snapshot => (\r\n          setMessages(snapshot.docs.map((doc) =>\r\n            doc.data()))\r\n        ));\r\n    }\r\n  }, [id]); \r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n  const createChat = () => {\r\n    const roomName = prompt(\"Pleas enter name for chat room\");\r\n\r\n    if (roomName) {\r\n      //do something...\r\n      db.collection(\"rooms\").add({\r\n        name: roomName,\r\n      });\r\n    }\r\n  };\r\n  return !addNewChat ? (\r\n    <Link to={`/rooms/${id}`}>\r\n      <div className=\"sidebarChat\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"sidebarChat__info\">\r\n          <h2>{name}</h2>\r\n          <p>{messages[0]?.message}</p>\r\n        </div>\r\n\r\n      </div>\r\n    </Link>\r\n\r\n  ) : (\r\n    <div onClick={createChat}\r\n      className=\"sidebarChat\">\r\n      <h2>Add new Chat</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChat;","import React, { useEffect, useState } from 'react';\r\nimport \"./Sidebar.css\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\n\r\nimport {Avatar ,IconButton } from \"@material-ui/core\";\r\nimport ChatIcon  from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n       \r\n        const [rooms, setRooms] = useState([]);\r\n        const [{ user }, dispatch] = useStateValue();\r\n\r\n        useEffect(() => {\r\n\r\n            const unsubscribe = db.collection('rooms').onSnapshot((snapshot) =>  \r\n                \r\n                    setRooms(\r\n                        snapshot.docs.map((doc) => ({\r\n                            id: doc.id,\r\n                            data: doc.data(),\r\n\r\n                        }))\r\n                        \r\n                )\r\n                );\r\n                return()=> {\r\n                    unsubscribe();\r\n                }\r\n        }, []);\r\n\r\n\r\n    return (\r\n        <div className =\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src ={user?.photoURL}/>\r\n                <div className=\"sidebar__hederRight\">\r\n                        <IconButton>\r\n                        <DonutLargeIcon />\r\n                        </IconButton>\r\n\r\n                        <IconButton>\r\n                            <ChatIcon/>\r\n                        </IconButton>\r\n\r\n                        <IconButton>\r\n                            <MoreVertIcon/>\r\n                        </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlinedIcon />\r\n                    <input placeholder =\"Search or start new chat\" type =\"text\" />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"sidebar__chat\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map((room) => (\r\n                    <SidebarChat key={room.id} id={room.id}\r\n                    name={room.data.name} />\r\n\r\n                ))}\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","export const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user:  action.user,\r\n\r\n            };\r\n  \r\n      default: \r\n        return state;\r\n    }\r\n};\r\n\r\nexport default reducer; ","import React from \"react\";\r\nimport { Button } from '@material-ui/core';\r\nimport \"./Login.css\";\r\nimport { auth, provider } from \"./firebase\";\r\nimport { actionTypes } from \"./reducer\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth\r\n        .signInWithPopup(provider)\r\n        .then((result) => { \r\n         dispatch({\r\n             type: actionTypes.SET_USER,\r\n             user: result.user,\r\n        });\r\n    })\r\n     .catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/598px-WhatsApp.svg.png\"\r\n                    alt=\"\"\r\n                />\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to whatsApp</h1>\r\n\r\n                </div>\r\n\r\n                <Button onClick={signIn}>\r\n                    Sign in with google\r\n            </Button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\n","import { Switch } from 'react-router-dom';\n// import { BrowserRouter as Router } from \"react-router-dom\";\nimport React from \"react\";\nimport './App.css';\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport Login from \"./Login\";\nimport { useState} from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n  <div className=\"app\">\n      {!user ? (\n       <Login />\n      ) : (\n         <div className=\"app__body\">\n          <Router>\n            <Sidebar />\n            \n            <Switch>\n              <Route exact path=\"/\">\n                <Chat />\n              </Route>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n     )}\n </div>\n );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n   <StateProvider initialState={initialState} \n   reducer={reducer}>\n   <App />\n   </StateProvider>\n  \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}